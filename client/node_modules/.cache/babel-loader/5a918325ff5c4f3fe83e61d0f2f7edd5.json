{"ast":null,"code":"import _regeneratorRuntime from\"/home/kirill/online-store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kirill/online-store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{$authHost,$host}from\"./index\";import jwt_decode from\"jwt-decode\";export var registration=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var _yield$$host$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return $host.post('api/user/registration',{email:email,password:password,role:'ADMIN'});case 2:_yield$$host$post=_context.sent;data=_yield$$host$post.data;localStorage.setItem('token',data.token);return _context.abrupt(\"return\",jwt_decode(data.token));case 6:case\"end\":return _context.stop();}}},_callee);}));return function registration(_x,_x2){return _ref.apply(this,arguments);};}();export var login=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,password){var _yield$$host$post2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return $host.post('api/user/login',{email:email,password:password});case 2:_yield$$host$post2=_context2.sent;data=_yield$$host$post2.data;localStorage.setItem('token',data.token);return _context2.abrupt(\"return\",jwt_decode(data.token));case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function login(_x3,_x4){return _ref2.apply(this,arguments);};}();export var check=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$$authHost$get,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return $authHost.get('api/user/auth');case 2:_yield$$authHost$get=_context3.sent;data=_yield$$authHost$get.data;localStorage.setItem('token',data.token);return _context3.abrupt(\"return\",jwt_decode(data.token));case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function check(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/kirill/online-store/client/src/http/userAPI.js"],"names":["$authHost","$host","jwt_decode","registration","email","password","post","role","data","localStorage","setItem","token","login","check","get"],"mappings":"2SAAA,OAAQA,SAAR,CAAmBC,KAAnB,KAA+B,SAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,MAAO,IAAMC,CAAAA,YAAY,0FAAG,iBAAOC,KAAP,CAAcC,QAAd,mKACHJ,CAAAA,KAAK,CAACK,IAAN,CAAW,uBAAX,CAAoC,CAACF,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAkBE,IAAI,CAAE,OAAxB,CAApC,CADG,wCACjBC,IADiB,mBACjBA,IADiB,CAExBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,IAAI,CAACG,KAAnC,EAFwB,gCAGjBT,UAAU,CAACM,IAAI,CAACG,KAAN,CAHO,wDAAH,kBAAZR,CAAAA,YAAY,gDAAlB,CAMP,MAAO,IAAMS,CAAAA,KAAK,2FAAG,kBAAOR,KAAP,CAAcC,QAAd,yKACIJ,CAAAA,KAAK,CAACK,IAAN,CAAW,gBAAX,CAA6B,CAACF,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAA7B,CADJ,0CACVG,IADU,oBACVA,IADU,CAEjBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,IAAI,CAACG,KAAnC,EAFiB,iCAGVT,UAAU,CAACM,IAAI,CAACG,KAAN,CAHA,0DAAH,kBAALC,CAAAA,KAAK,kDAAX,CAMP,MAAO,IAAMC,CAAAA,KAAK,2FAAG,6LACIb,CAAAA,SAAS,CAACc,GAAV,CAAc,eAAd,CADJ,4CACVN,IADU,sBACVA,IADU,CAEjBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,IAAI,CAACG,KAAnC,EAFiB,iCAGVT,UAAU,CAACM,IAAI,CAACG,KAAN,CAHA,0DAAH,kBAALE,CAAAA,KAAK,2CAAX","sourcesContent":["import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const registration = async (email, password) => {\n    const {data} = await $host.post('api/user/registration', {email, password, role: 'ADMIN'})\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n\nexport const login = async (email, password) => {\n    const {data} = await $host.post('api/user/login', {email, password})\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n\nexport const check = async () => {\n    const {data} = await $authHost.get('api/user/auth' )\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n"]},"metadata":{},"sourceType":"module"}