{"ast":null,"code":"import _classCallCheck from\"/home/kirill/online-store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kirill/online-store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{makeAutoObservable}from\"mobx\";var DeviceStore=/*#__PURE__*/function(){function DeviceStore(){_classCallCheck(this,DeviceStore);this._types=[];this._brands=[];this._devices=[];this._selectedType={};this._selectedBrand={};this._page=1;this._totalCount=0;this._limit=3;makeAutoObservable(this);}_createClass(DeviceStore,[{key:\"setTypes\",value:function setTypes(types){this._types=types;}},{key:\"setBrands\",value:function setBrands(brands){this._brands=brands;}},{key:\"setDevices\",value:function setDevices(devices){this._devices=devices;}},{key:\"setSelectedType\",value:function setSelectedType(type){this.setPage(1);this._selectedType=type;}},{key:\"setSelectedBrand\",value:function setSelectedBrand(brand){this.setPage(1);this._selectedBrand=brand;}},{key:\"setPage\",value:function setPage(page){this._page=page;}},{key:\"setTotalCount\",value:function setTotalCount(count){this._totalCount=count;}},{key:\"types\",get:function get(){return this._types;}},{key:\"brands\",get:function get(){return this._brands;}},{key:\"devices\",get:function get(){return this._devices;}},{key:\"selectedType\",get:function get(){return this._selectedType;}},{key:\"selectedBrand\",get:function get(){return this._selectedBrand;}},{key:\"totalCount\",get:function get(){return this._totalCount;}},{key:\"page\",get:function get(){return this._page;}},{key:\"limit\",get:function get(){return this._limit;}}]);return DeviceStore;}();export{DeviceStore as default};","map":{"version":3,"sources":["/home/kirill/online-store/client/src/store/DeviceStore.js"],"names":["makeAutoObservable","DeviceStore","_types","_brands","_devices","_selectedType","_selectedBrand","_page","_totalCount","_limit","types","brands","devices","type","setPage","brand","page","count"],"mappings":"4SAAA,OAAQA,kBAAR,KAAiC,MAAjC,C,GAEqBC,CAAAA,W,yBACjB,sBAAc,mCACV,KAAKC,MAAL,CAAc,EAAd,CACA,KAAKC,OAAL,CAAe,EAAf,CACA,KAAKC,QAAL,CAAgB,EAAhB,CACA,KAAKC,aAAL,CAAqB,EAArB,CACA,KAAKC,cAAL,CAAsB,EAAtB,CACA,KAAKC,KAAL,CAAa,CAAb,CACA,KAAKC,WAAL,CAAmB,CAAnB,CACA,KAAKC,MAAL,CAAc,CAAd,CACAT,kBAAkB,CAAC,IAAD,CAAlB,CACH,C,kEAEQU,K,CAAO,CACZ,KAAKR,MAAL,CAAcQ,KAAd,CACH,C,4CACSC,M,CAAQ,CACd,KAAKR,OAAL,CAAeQ,MAAf,CACH,C,8CACUC,O,CAAS,CAChB,KAAKR,QAAL,CAAgBQ,OAAhB,CACH,C,wDAEeC,I,CAAM,CAClB,KAAKC,OAAL,CAAa,CAAb,EACA,KAAKT,aAAL,CAAqBQ,IAArB,CACH,C,0DACgBE,K,CAAO,CACpB,KAAKD,OAAL,CAAa,CAAb,EACA,KAAKR,cAAL,CAAsBS,KAAtB,CACH,C,wCACOC,I,CAAM,CACV,KAAKT,KAAL,CAAaS,IAAb,CACH,C,oDACaC,K,CAAO,CACjB,KAAKT,WAAL,CAAmBS,KAAnB,CACH,C,iCAEW,CACR,MAAO,MAAKf,MAAZ,CACH,C,kCACY,CACT,MAAO,MAAKC,OAAZ,CACH,C,mCACa,CACV,MAAO,MAAKC,QAAZ,CACH,C,wCACkB,CACf,MAAO,MAAKC,aAAZ,CACH,C,yCACmB,CAChB,MAAO,MAAKC,cAAZ,CACH,C,sCACgB,CACb,MAAO,MAAKE,WAAZ,CACH,C,gCACU,CACP,MAAO,MAAKD,KAAZ,CACH,C,iCACW,CACR,MAAO,MAAKE,MAAZ,CACH,C,kCA7DgBR,W","sourcesContent":["import {makeAutoObservable} from \"mobx\";\n\nexport default class DeviceStore {\n    constructor() {\n        this._types = []\n        this._brands = []\n        this._devices = []\n        this._selectedType = {}\n        this._selectedBrand = {}\n        this._page = 1\n        this._totalCount = 0\n        this._limit = 3\n        makeAutoObservable(this)\n    }\n\n    setTypes(types) {\n        this._types = types\n    }\n    setBrands(brands) {\n        this._brands = brands\n    }\n    setDevices(devices) {\n        this._devices = devices\n    }\n\n    setSelectedType(type) {\n        this.setPage(1)\n        this._selectedType = type\n    }\n    setSelectedBrand(brand) {\n        this.setPage(1)\n        this._selectedBrand = brand\n    }\n    setPage(page) {\n        this._page = page\n    }\n    setTotalCount(count) {\n        this._totalCount = count\n    }\n\n    get types() {\n        return this._types\n    }\n    get brands() {\n        return this._brands\n    }\n    get devices() {\n        return this._devices\n    }\n    get selectedType() {\n        return this._selectedType\n    }\n    get selectedBrand() {\n        return this._selectedBrand\n    }\n    get totalCount() {\n        return this._totalCount\n    }\n    get page() {\n        return this._page\n    }\n    get limit() {\n        return this._limit\n    }\n}\n"]},"metadata":{},"sourceType":"module"}