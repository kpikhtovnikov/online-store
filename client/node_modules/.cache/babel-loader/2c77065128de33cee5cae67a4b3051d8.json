{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from'react';import{observer}from\"mobx-react-lite\";import{Context}from\"../index\";import Col from\"react-bootstrap/Col\";import ListGroup from\"react-bootstrap/ListGroup\";var TypeBar=observer(function(){var _useContext=useContext(Context),device=_useContext.device;return/*#__PURE__*/_jsx(ListGroup,{children:device.types.map(function(type){return/*#__PURE__*/_jsx(ListGroup.Item,{style:{cursor:'pointer'},active:type.id===device.selectedType.id,onClick:function onClick(){return device.setSelectedType(type);},children:type.name},type.id);})});});export default TypeBar;","map":{"version":3,"sources":["/home/kirill/online-store/client/src/components/TypeBar.js"],"names":["React","useContext","observer","Context","Col","ListGroup","TypeBar","device","types","map","type","cursor","id","selectedType","setSelectedType","name"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,OAAQC,QAAR,KAAuB,iBAAvB,CACA,OAAQC,OAAR,KAAsB,UAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CAEA,GAAMC,CAAAA,OAAO,CAAGJ,QAAQ,CAAC,UAAM,iBACVD,UAAU,CAACE,OAAD,CADA,CACpBI,MADoB,aACpBA,MADoB,CAE3B,mBACI,KAAC,SAAD,WACKA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiB,SAAAC,IAAI,qBAClB,KAAC,SAAD,CAAW,IAAX,EACI,KAAK,CAAE,CAACC,MAAM,CAAE,SAAT,CADX,CAEI,MAAM,CAAED,IAAI,CAACE,EAAL,GAAYL,MAAM,CAACM,YAAP,CAAoBD,EAF5C,CAGI,OAAO,CAAE,yBAAML,CAAAA,MAAM,CAACO,eAAP,CAAuBJ,IAAvB,CAAN,EAHb,UAMKA,IAAI,CAACK,IANV,EAISL,IAAI,CAACE,EAJd,CADkB,EAArB,CADL,EADJ,CAcH,CAhBuB,CAAxB,CAkBA,cAAeN,CAAAA,OAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n"]},"metadata":{},"sourceType":"module"}